/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MyOtherContract,
  MyOtherContractInterface,
} from "../MyOtherContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MyERC20",
        name: "myERC20_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "myOtherFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107c63803806107c68339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b6106a6806101206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631a39d8ef1461003b57806328787ba514610059575b600080fd5b610043610075565b6040516100509190610506565b60405180910390f35b610073600480360381019061006e91906103f1565b61007b565b005b60015481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c7e54a684846040518363ffffffff1660e01b81526004016100d99291906104ad565b602060405180830381600087803b1580156100f357600080fd5b505af1158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b919061042d565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561019657600080fd5b505afa1580156101aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ce919061042d565b905061020f6040518060400160405280600b81526020017f746f74616c537570706c79000000000000000000000000000000000000000000815250826102ed565b61024e6040518060400160405280601781526020017f5468652072657475726e656420616d6f756e7420776173000000000000000000815250836102ed565b61028d6040518060400160405280601581526020017f5468652070617373656420616d6f756e74207761730000000000000000000000815250846102ed565b826001600082825461029f919061053d565b925050819055506102e76040518060400160405280600b81526020017f746f74616c416d6f756e740000000000000000000000000000000000000000008152506001546102ed565b50505050565b61038582826040516024016103039291906104d6565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610389565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000813590506103c181610642565b92915050565b6000813590506103d681610659565b92915050565b6000815190506103eb81610659565b92915050565b6000806040838503121561040457600080fd5b6000610412858286016103b2565b9250506020610423858286016103c7565b9150509250929050565b60006020828403121561043f57600080fd5b600061044d848285016103dc565b91505092915050565b61045f81610593565b82525050565b600061047082610521565b61047a818561052c565b935061048a8185602086016105cf565b61049381610631565b840191505092915050565b6104a7816105c5565b82525050565b60006040820190506104c26000830185610456565b6104cf602083018461049e565b9392505050565b600060408201905081810360008301526104f08185610465565b90506104ff602083018461049e565b9392505050565b600060208201905061051b600083018461049e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610548826105c5565b9150610553836105c5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561058857610587610602565b5b828201905092915050565b600061059e826105a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105ed5780820151818401526020810190506105d2565b838111156105fc576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b61064b81610593565b811461065657600080fd5b50565b610662816105c5565b811461066d57600080fd5b5056fea2646970667358221220c63e091e48c504aa3680f584bfe83b473672eacdc66a4ffcfc8cc6fa8545af6c64736f6c63430008040033";

export class MyOtherContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    myERC20_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyOtherContract> {
    return super.deploy(myERC20_, overrides || {}) as Promise<MyOtherContract>;
  }
  getDeployTransaction(
    myERC20_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(myERC20_, overrides || {});
  }
  attach(address: string): MyOtherContract {
    return super.attach(address) as MyOtherContract;
  }
  connect(signer: Signer): MyOtherContract__factory {
    return super.connect(signer) as MyOtherContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyOtherContractInterface {
    return new utils.Interface(_abi) as MyOtherContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyOtherContract {
    return new Contract(address, _abi, signerOrProvider) as MyOtherContract;
  }
}
